//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\a\Desktop\Interpreter\test\Content\CODE.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Interpreter.Content {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class GrammarLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, NEWLINEOP=21, DATATYPE=22, BOOLVAL=23, CHARVAL=24, 
		INTEGERVAL=25, FLOATVAL=26, STRINGVAL=27, WS=28, NEWLINE=29, FUNCTIONNAME=30, 
		VARIABLENAME=31, COMMENT=32;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "NEWLINEOP", "DATATYPE", "BOOLVAL", "CHARVAL", 
		"INTEGERVAL", "FLOATVAL", "STRINGVAL", "WS", "NEWLINE", "FUNCTIONNAME", 
		"VARIABLENAME", "COMMENT"
	};


	public GrammarLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'BEGIN CODE'", "'END CODE'", "'='", "': '", "','", "'*'", "'/'", 
		"'%'", "'+'", "'-'", "'>'", "'<'", "'>='", "'<='", "'=='", "'<>'", "'AND'", 
		"'OR'", "'NOT'", "'&'", "'$'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, "NEWLINEOP", "DATATYPE", 
		"BOOLVAL", "CHARVAL", "INTEGERVAL", "FLOATVAL", "STRINGVAL", "WS", "NEWLINE", 
		"FUNCTIONNAME", "VARIABLENAME", "COMMENT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "CODE.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\"\x112\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 "+
		"\t \x4!\t!\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2"+
		"\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x4\x3"+
		"\x4\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\b\x3\b\x3\t\x3\t\x3\n\x3"+
		"\n\x3\v\x3\v\x3\f\x3\f\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF\x3"+
		"\x10\x3\x10\x3\x10\x3\x11\x3\x11\x3\x11\x3\x12\x3\x12\x3\x12\x3\x12\x3"+
		"\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3\x14\x3\x15\x3\x15\x3\x16\x3"+
		"\x16\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3"+
		"\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x5\x17\x98\n\x17\x3\x18"+
		"\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x5\x18\xA3\n"+
		"\x18\x3\x19\x3\x19\x5\x19\xA7\n\x19\x3\x19\x3\x19\x3\x1A\x5\x1A\xAC\n"+
		"\x1A\x3\x1A\x3\x1A\a\x1A\xB0\n\x1A\f\x1A\xE\x1A\xB3\v\x1A\x3\x1B\x5\x1B"+
		"\xB6\n\x1B\x3\x1B\x6\x1B\xB9\n\x1B\r\x1B\xE\x1B\xBA\x3\x1B\x3\x1B\x5\x1B"+
		"\xBF\n\x1B\x3\x1B\x6\x1B\xC2\n\x1B\r\x1B\xE\x1B\xC3\x3\x1C\x3\x1C\a\x1C"+
		"\xC8\n\x1C\f\x1C\xE\x1C\xCB\v\x1C\x3\x1C\x3\x1C\x3\x1C\a\x1C\xD0\n\x1C"+
		"\f\x1C\xE\x1C\xD3\v\x1C\x3\x1C\x3\x1C\x3\x1C\a\x1C\xD8\n\x1C\f\x1C\xE"+
		"\x1C\xDB\v\x1C\x3\x1C\x6\x1C\xDE\n\x1C\r\x1C\xE\x1C\xDF\x5\x1C\xE2\n\x1C"+
		"\x3\x1D\x6\x1D\xE5\n\x1D\r\x1D\xE\x1D\xE6\x3\x1D\x3\x1D\x3\x1E\x3\x1E"+
		"\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F"+
		"\x3\x1F\x5\x1F\xF8\n\x1F\x3 \x3 \a \xFC\n \f \xE \xFF\v \x3 \x3 \a \x103"+
		"\n \f \xE \x106\v \x5 \x108\n \x3!\x3!\a!\x10C\n!\f!\xE!\x10F\v!\x3!\x3"+
		"!\x2\x2\x2\"\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11"+
		"\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2"+
		"\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19"+
		"\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?"+
		"\x2!\x41\x2\"\x3\x2\r\x5\x2\x32;\x43\\\x63|\x3\x2\x33;\x3\x2\x32;\x3\x2"+
		"$$\x3\x2))\x3\x2__\x5\x2\v\v\xF\xF\"\"\x4\x2\f\f\xF\xF\x4\x2\x61\x61\x63"+
		"|\x6\x2\x32;\x43\\\x61\x61\x63|\x3\x2\x63|\x127\x2\x3\x3\x2\x2\x2\x2\x5"+
		"\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3"+
		"\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15"+
		"\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2"+
		"\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2"+
		"\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-"+
		"\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2"+
		"\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2"+
		"\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x3\x43\x3\x2\x2\x2"+
		"\x5N\x3\x2\x2\x2\aW\x3\x2\x2\x2\tY\x3\x2\x2\x2\v\\\x3\x2\x2\x2\r^\x3\x2"+
		"\x2\x2\xF`\x3\x2\x2\x2\x11\x62\x3\x2\x2\x2\x13\x64\x3\x2\x2\x2\x15\x66"+
		"\x3\x2\x2\x2\x17h\x3\x2\x2\x2\x19j\x3\x2\x2\x2\x1Bl\x3\x2\x2\x2\x1Do\x3"+
		"\x2\x2\x2\x1Fr\x3\x2\x2\x2!u\x3\x2\x2\x2#x\x3\x2\x2\x2%|\x3\x2\x2\x2\'"+
		"\x7F\x3\x2\x2\x2)\x83\x3\x2\x2\x2+\x85\x3\x2\x2\x2-\x97\x3\x2\x2\x2/\xA2"+
		"\x3\x2\x2\x2\x31\xA4\x3\x2\x2\x2\x33\xAB\x3\x2\x2\x2\x35\xB5\x3\x2\x2"+
		"\x2\x37\xE1\x3\x2\x2\x2\x39\xE4\x3\x2\x2\x2;\xEA\x3\x2\x2\x2=\xF7\x3\x2"+
		"\x2\x2?\x107\x3\x2\x2\x2\x41\x109\x3\x2\x2\x2\x43\x44\a\x44\x2\x2\x44"+
		"\x45\aG\x2\x2\x45\x46\aI\x2\x2\x46G\aK\x2\x2GH\aP\x2\x2HI\a\"\x2\x2IJ"+
		"\a\x45\x2\x2JK\aQ\x2\x2KL\a\x46\x2\x2LM\aG\x2\x2M\x4\x3\x2\x2\x2NO\aG"+
		"\x2\x2OP\aP\x2\x2PQ\a\x46\x2\x2QR\a\"\x2\x2RS\a\x45\x2\x2ST\aQ\x2\x2T"+
		"U\a\x46\x2\x2UV\aG\x2\x2V\x6\x3\x2\x2\x2WX\a?\x2\x2X\b\x3\x2\x2\x2YZ\a"+
		"<\x2\x2Z[\a\"\x2\x2[\n\x3\x2\x2\x2\\]\a.\x2\x2]\f\x3\x2\x2\x2^_\a,\x2"+
		"\x2_\xE\x3\x2\x2\x2`\x61\a\x31\x2\x2\x61\x10\x3\x2\x2\x2\x62\x63\a\'\x2"+
		"\x2\x63\x12\x3\x2\x2\x2\x64\x65\a-\x2\x2\x65\x14\x3\x2\x2\x2\x66g\a/\x2"+
		"\x2g\x16\x3\x2\x2\x2hi\a@\x2\x2i\x18\x3\x2\x2\x2jk\a>\x2\x2k\x1A\x3\x2"+
		"\x2\x2lm\a@\x2\x2mn\a?\x2\x2n\x1C\x3\x2\x2\x2op\a>\x2\x2pq\a?\x2\x2q\x1E"+
		"\x3\x2\x2\x2rs\a?\x2\x2st\a?\x2\x2t \x3\x2\x2\x2uv\a>\x2\x2vw\a@\x2\x2"+
		"w\"\x3\x2\x2\x2xy\a\x43\x2\x2yz\aP\x2\x2z{\a\x46\x2\x2{$\x3\x2\x2\x2|"+
		"}\aQ\x2\x2}~\aT\x2\x2~&\x3\x2\x2\x2\x7F\x80\aP\x2\x2\x80\x81\aQ\x2\x2"+
		"\x81\x82\aV\x2\x2\x82(\x3\x2\x2\x2\x83\x84\a(\x2\x2\x84*\x3\x2\x2\x2\x85"+
		"\x86\a&\x2\x2\x86,\x3\x2\x2\x2\x87\x88\a\x44\x2\x2\x88\x89\aQ\x2\x2\x89"+
		"\x8A\aQ\x2\x2\x8A\x98\aN\x2\x2\x8B\x8C\a\x45\x2\x2\x8C\x8D\aJ\x2\x2\x8D"+
		"\x8E\a\x43\x2\x2\x8E\x98\aT\x2\x2\x8F\x90\aK\x2\x2\x90\x91\aP\x2\x2\x91"+
		"\x98\aV\x2\x2\x92\x93\aH\x2\x2\x93\x94\aN\x2\x2\x94\x95\aQ\x2\x2\x95\x96"+
		"\a\x43\x2\x2\x96\x98\aV\x2\x2\x97\x87\x3\x2\x2\x2\x97\x8B\x3\x2\x2\x2"+
		"\x97\x8F\x3\x2\x2\x2\x97\x92\x3\x2\x2\x2\x98.\x3\x2\x2\x2\x99\x9A\aV\x2"+
		"\x2\x9A\x9B\aT\x2\x2\x9B\x9C\aW\x2\x2\x9C\xA3\aG\x2\x2\x9D\x9E\aH\x2\x2"+
		"\x9E\x9F\a\x43\x2\x2\x9F\xA0\aN\x2\x2\xA0\xA1\aU\x2\x2\xA1\xA3\aG\x2\x2"+
		"\xA2\x99\x3\x2\x2\x2\xA2\x9D\x3\x2\x2\x2\xA3\x30\x3\x2\x2\x2\xA4\xA6\a"+
		")\x2\x2\xA5\xA7\t\x2\x2\x2\xA6\xA5\x3\x2\x2\x2\xA7\xA8\x3\x2\x2\x2\xA8"+
		"\xA9\a)\x2\x2\xA9\x32\x3\x2\x2\x2\xAA\xAC\a/\x2\x2\xAB\xAA\x3\x2\x2\x2"+
		"\xAB\xAC\x3\x2\x2\x2\xAC\xAD\x3\x2\x2\x2\xAD\xB1\t\x3\x2\x2\xAE\xB0\t"+
		"\x4\x2\x2\xAF\xAE\x3\x2\x2\x2\xB0\xB3\x3\x2\x2\x2\xB1\xAF\x3\x2\x2\x2"+
		"\xB1\xB2\x3\x2\x2\x2\xB2\x34\x3\x2\x2\x2\xB3\xB1\x3\x2\x2\x2\xB4\xB6\a"+
		"/\x2\x2\xB5\xB4\x3\x2\x2\x2\xB5\xB6\x3\x2\x2\x2\xB6\xB8\x3\x2\x2\x2\xB7"+
		"\xB9\t\x4\x2\x2\xB8\xB7\x3\x2\x2\x2\xB9\xBA\x3\x2\x2\x2\xBA\xB8\x3\x2"+
		"\x2\x2\xBA\xBB\x3\x2\x2\x2\xBB\xBC\x3\x2\x2\x2\xBC\xBE\a\x30\x2\x2\xBD"+
		"\xBF\a/\x2\x2\xBE\xBD\x3\x2\x2\x2\xBE\xBF\x3\x2\x2\x2\xBF\xC1\x3\x2\x2"+
		"\x2\xC0\xC2\t\x4\x2\x2\xC1\xC0\x3\x2\x2\x2\xC2\xC3\x3\x2\x2\x2\xC3\xC1"+
		"\x3\x2\x2\x2\xC3\xC4\x3\x2\x2\x2\xC4\x36\x3\x2\x2\x2\xC5\xC9\a$\x2\x2"+
		"\xC6\xC8\n\x5\x2\x2\xC7\xC6\x3\x2\x2\x2\xC8\xCB\x3\x2\x2\x2\xC9\xC7\x3"+
		"\x2\x2\x2\xC9\xCA\x3\x2\x2\x2\xCA\xCC\x3\x2\x2\x2\xCB\xC9\x3\x2\x2\x2"+
		"\xCC\xE2\a$\x2\x2\xCD\xD1\a)\x2\x2\xCE\xD0\n\x6\x2\x2\xCF\xCE\x3\x2\x2"+
		"\x2\xD0\xD3\x3\x2\x2\x2\xD1\xCF\x3\x2\x2\x2\xD1\xD2\x3\x2\x2\x2\xD2\xD4"+
		"\x3\x2\x2\x2\xD3\xD1\x3\x2\x2\x2\xD4\xE2\a)\x2\x2\xD5\xD9\a]\x2\x2\xD6"+
		"\xD8\n\a\x2\x2\xD7\xD6\x3\x2\x2\x2\xD8\xDB\x3\x2\x2\x2\xD9\xD7\x3\x2\x2"+
		"\x2\xD9\xDA\x3\x2\x2\x2\xDA\xDD\x3\x2\x2\x2\xDB\xD9\x3\x2\x2\x2\xDC\xDE"+
		"\a_\x2\x2\xDD\xDC\x3\x2\x2\x2\xDE\xDF\x3\x2\x2\x2\xDF\xDD\x3\x2\x2\x2"+
		"\xDF\xE0\x3\x2\x2\x2\xE0\xE2\x3\x2\x2\x2\xE1\xC5\x3\x2\x2\x2\xE1\xCD\x3"+
		"\x2\x2\x2\xE1\xD5\x3\x2\x2\x2\xE2\x38\x3\x2\x2\x2\xE3\xE5\t\b\x2\x2\xE4"+
		"\xE3\x3\x2\x2\x2\xE5\xE6\x3\x2\x2\x2\xE6\xE4\x3\x2\x2\x2\xE6\xE7\x3\x2"+
		"\x2\x2\xE7\xE8\x3\x2\x2\x2\xE8\xE9\b\x1D\x2\x2\xE9:\x3\x2\x2\x2\xEA\xEB"+
		"\t\t\x2\x2\xEB<\x3\x2\x2\x2\xEC\xED\a\x46\x2\x2\xED\xEE\aK\x2\x2\xEE\xEF"+
		"\aU\x2\x2\xEF\xF0\aR\x2\x2\xF0\xF1\aN\x2\x2\xF1\xF2\a\x43\x2\x2\xF2\xF8"+
		"\a[\x2\x2\xF3\xF4\aU\x2\x2\xF4\xF5\a\x45\x2\x2\xF5\xF6\a\x43\x2\x2\xF6"+
		"\xF8\aP\x2\x2\xF7\xEC\x3\x2\x2\x2\xF7\xF3\x3\x2\x2\x2\xF8>\x3\x2\x2\x2"+
		"\xF9\xFD\t\n\x2\x2\xFA\xFC\t\v\x2\x2\xFB\xFA\x3\x2\x2\x2\xFC\xFF\x3\x2"+
		"\x2\x2\xFD\xFB\x3\x2\x2\x2\xFD\xFE\x3\x2\x2\x2\xFE\x108\x3\x2\x2\x2\xFF"+
		"\xFD\x3\x2\x2\x2\x100\x104\t\f\x2\x2\x101\x103\t\v\x2\x2\x102\x101\x3"+
		"\x2\x2\x2\x103\x106\x3\x2\x2\x2\x104\x102\x3\x2\x2\x2\x104\x105\x3\x2"+
		"\x2\x2\x105\x108\x3\x2\x2\x2\x106\x104\x3\x2\x2\x2\x107\xF9\x3\x2\x2\x2"+
		"\x107\x100\x3\x2\x2\x2\x108@\x3\x2\x2\x2\x109\x10D\a%\x2\x2\x10A\x10C"+
		"\n\t\x2\x2\x10B\x10A\x3\x2\x2\x2\x10C\x10F\x3\x2\x2\x2\x10D\x10B\x3\x2"+
		"\x2\x2\x10D\x10E\x3\x2\x2\x2\x10E\x110\x3\x2\x2\x2\x10F\x10D\x3\x2\x2"+
		"\x2\x110\x111\b!\x2\x2\x111\x42\x3\x2\x2\x2\x17\x2\x97\xA2\xA6\xAB\xB1"+
		"\xB5\xBA\xBE\xC3\xC9\xD1\xD9\xDF\xE1\xE6\xF7\xFD\x104\x107\x10D\x3\b\x2"+
		"\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Interpreter.Content
